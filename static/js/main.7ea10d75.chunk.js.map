{"version":3,"sources":["Taskbar/logo.svg","Taskbar/task.svg","Taskbar/explorer.svg","Taskbar/firefox.svg","Taskbar/chrome.svg","Taskbar/vscode.svg","Taskbar/outlook.svg","Windows/explorer.png","Taskbar/Taskbar.styles.js","Taskbar/Taskbar.js","Windows/Window.js","VSCode/VSCode.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainContainer","styled","div","_templateObject","Clock","nav","_templateObject2","_templateObject3","Time","_templateObject4","button","_templateObject5","App","_useState","useState","time","Date","_useState2","Object","slicedToArray","dataTime","setTime","useEffect","setInterval","react_default","a","createElement","src","logo","id","className","alt","task","explorer","outlook","firefox","chrome","vscode","toLocaleTimeString","style","display","alignItems","justifyContent","border","background","backgroundImage","concat","Background","backgroundRepeat","backgroundSize","Window","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","width","height","x","y","_this2","lib","bounds","size","position","onDragStop","e","d","setState","onResize","direction","ref","delta","objectSpread","React","Component","VSCode","index_min_default","url","allowFullScreen","Windows_Window","src_VSCode_VSCode","Taskbar_Taskbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ea10d75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/task.369aa1bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer.48101c11.svg\";","module.exports = __webpack_public_path__ + \"static/media/firefox.3ce8d59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/chrome.f3b6c54c.svg\";","module.exports = __webpack_public_path__ + \"static/media/vscode.6e1a6f9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/outlook.8ea4700d.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer.45c49d7f.png\";","import styled from \"styled-components\";\r\n\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100%;\r\n  height: 52px;\r\n  display: flex;\r\n  background: rgba(22, 28, 22, 0.8);\r\n  border: 1px solid #aaa;\r\n  box-sizing: border-box;\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavBar = styled.nav`\r\n  width: 100vw;\r\n  background-color: darkgrey;\r\n  height: 80px;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto;\r\n  `;\r\n\r\n  const Clock = styled.div`\r\n    width: 6rem;\r\n    color: #fff;\r\n    margin: 0 1rem 0 0;\r\n   `;\r\n\r\n  const Time = styled.p`\r\n    font-size: 15px;\r\n    color: white;\r\n\r\n  `;\r\n\r\n  const Button = styled.button`\r\n    margin-top: 10px;\r\n    width: 100px;\r\n    height: 40px;\r\n    border-radius: 18.5px;\r\n    background-color: darkgray;\r\n  `;\r\n\r\n\r\n  export {\r\n      Clock, \r\n      MainContainer,\r\n      NavBar,\r\n      Time, \r\n      Button\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { MainContainer, Clock, Time } from './Taskbar.styles';\r\n\r\nimport logo from './logo.svg';\r\nimport task from './task.svg';\r\nimport explorer from './explorer.svg';\r\nimport firefox from './firefox.svg';\r\nimport chrome from './chrome.svg';\r\nimport vscode from './vscode.svg';\r\nimport outlook from './outlook.svg';\r\n\r\nimport './Taskbar.css';\r\n\r\n\r\nconst App = () => {\r\n  const [dataTime, setTime] = useState({ time: new Date() })\r\n  const { time } = dataTime\r\n\r\n  const currentTime = () => setTime({ time: new Date() });\r\n\r\n  useEffect(() => {\r\n    setInterval(() => currentTime(), 1000);\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <MainContainer>\r\n        <img src={logo} id=\"start\" className=\"App-logo\" alt=\"logo\" />\r\n      <div id=\"taskbar-apps\">\r\n        <img src={task} className=\"icon\" alt=\"logo\" />\r\n        <img src={explorer} className=\"icon\" alt=\"logo\" />\r\n        <img src={outlook} className=\"icon\" alt=\"logo\" />\r\n        <img src={firefox} className=\"icon\" alt=\"logo\" />\r\n        <img src={chrome} className=\"icon\" alt=\"logo\" />\r\n        <img src={vscode} className=\"icon\" alt=\"logo\" />\r\n      </div>\r\n      <Clock>\r\n        <Time>{time.toLocaleTimeString()}</Time>\r\n      </Clock>\r\n    </MainContainer>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport Background from \"./explorer.png\";\r\n\r\nconst style = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  border: \"solid 1px #ddd\",\r\n  background: \"#f0f0f0\",\r\n  backgroundImage: `url(${Background})`,\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nclass Window extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      width: 730,\r\n      height: 590,\r\n      x: 10,\r\n      y: 10\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Rnd\r\n        id=\"explorer\"\r\n        bounds=\"window\"\r\n        style={style}\r\n        size={{ width: this.state.width, height: this.state.height }}\r\n        position={{ x: this.state.x, y: this.state.y }}\r\n        onDragStop={(e, d) => {\r\n          this.setState({ x: d.x, y: d.y });\r\n        }}\r\n        onResize={(e, direction, ref, delta, position) => {\r\n          this.setState({\r\n            width: ref.style.width,\r\n            height: ref.style.height,\r\n            ...position\r\n          });\r\n        }}\r\n      >\r\n      </Rnd>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Window;","import React from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport Iframe from \"react-iframe\";\n\nconst style = {\n\n};\n\nclass VSCode extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      width: 830,\n      height: 690,\n      x: 100,\n      y: 40\n    };\n  }\n\n  render() {\n    return (\n      <Rnd\n        id=\"window\"\n        bounds=\"window\"\n        style={style}\n        size={{ width: this.state.width, height: this.state.height }}\n        position={{ x: this.state.x, y: this.state.y }}\n        onDragStop={(e, d) => {\n          this.setState({ x: d.x, y: d.y });\n        }}\n        onResize={(e, direction, ref, delta, position) => {\n          this.setState({\n            width: ref.style.width,\n            height: ref.style.height,\n            ...position\n          });\n        }}\n      >\n      <Iframe url=\"http://ec2-34-238-162-153.compute-1.amazonaws.com\"\n        width={this.state.width}\n        height={this.state.height}\n        position={{ x: this.state.x, y: this.state.y }}\n        id=\"vscode-iframe\"\n        className=\"iframe\"\n        display=\"initial\"\n        // position=\"relative\"\n        allowFullScreen/>\n      </Rnd>\n    );\n  }\n}\n\nexport default VSCode;","import React, { Component } from 'react';\nimport Taskbar from './Taskbar/Taskbar';\nimport Window from './Windows/Window';\nimport './App.css';\nimport VSCode from './VSCode/VSCode';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header id=\"header\" className=\"App-header\">\n          <h1 className=\"App\">\n            React Taskbar\n          </h1>\n        </header>\n        <Window/>\n        <VSCode/>\n        <Taskbar/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}